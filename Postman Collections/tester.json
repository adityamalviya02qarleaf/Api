{
	"info": {
		"_postman_id": "fb73ffdd-ca8c-40a9-ba3a-5718a5231c68",
		"name": "Sample Postman Collection",
		"description": "A sample collection to demonstrate collections as a set of related requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Newman: GET request",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test('expect response be 200', function () {",
							"    pm.response.to.be.ok",
							"})",
							"pm.test('expect response json contain args', function () {",
							"    pm.expect(pm.response.json().args).to.have.property('source')",
							"      .and.equal('newman-sample-github-collection')",
							"})"
						],
						"id": "a5a8601f-fcd1-4321-b585-17de56e345df"
					}
				}
			],
			"id": "71c9847e-31bd-4a51-8213-473452ab7108",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?source=newman-sample-github-collection",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "source",
							"value": "newman-sample-github-collection"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Newman: POST request",
			"id": "ea222b34-af45-4d39-a63f-dd134f0d65a0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium..."
				},
				"url": "https://postman-echo.com/post"
			},
			"response": []
		},
		{
			"name": "Newman: POST request with JSON body",
			"id": "0bdcee99-9379-44b8-8e0c-ab60a12a273b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"text\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"}"
				},
				"url": "https://postman-echo.com/post"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2e33fbe9-504a-4c0a-a334-e813404dec96",
				"type": "text/javascript",
				"exec": [
					"{",
					"    \"info\": {",
					"        \"_postman_id\": \"fb73ffdd-ca8c-40a9-ba3a-5718a5231c68\",",
					"        \"name\": \"Sample Postman Collection\",",
					"        \"description\": \"A sample collection to demonstrate collections as a set of related requests\",",
					"        \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"",
					"    },",
					"    \"item\": [",
					"        // Your request items...",
					"    ],",
					"    \"event\": [",
					"        {",
					"            \"listen\": \"prerequest\",",
					"            \"script\": {",
					"                \"id\": \"7b6b207e-b407-434e-8c30-6bcf0c0f292f\",",
					"                \"type\": \"text/javascript\",",
					"                \"exec\": [",
					"                    \"const { exec } = require('child_process');\",",
					"                    \"const nodemailer = require('nodemailer');\",",
					"                    \"\",",
					"                    \"// Execute Newman tests\",",
					"                    \"exec('newman run SamplePostmanCollection.json -r html', (error, stdout, stderr) => {\",",
					"                    \"    if (error) {\",",
					"                    \"        console.error(`Error executing Newman: ${error}`);\",",
					"                    \"        return;\",",
					"                    \"    }\",",
					"                    \"\",",
					"                    \"    // Read the HTML report\",",
					"                    \"    const fs = require('fs');\",",
					"                    \"    const htmlReport = fs.readFileSync('newman/your-report-name.html', 'utf8');\",",
					"                    \"\",",
					"                    \"    // Check if tests failed\",",
					"                    \"    const testsFailed = htmlReport.includes('class=\\\"failure\\\"');\",",
					"                    \"\",",
					"                    \"    // Configure email transporter\",",
					"                    \"    const transporter = nodemailer.createTransport({\",",
					"                    \"        service: 'gmail',\",",
					"                    \"        auth: {\",",
					"                    \"            user: 'your-email@gmail.com',\",",
					"                    \"            pass: 'your-email-password'\",",
					"                    \"        }\",",
					"                    \"    });\",",
					"                    \"\",",
					"                    \"    // Compose email\",",
					"                    \"    const mailOptions = {\",",
					"                    \"        from: 'your-email@gmail.com',\",",
					"                    \"        to: 'recipient@example.com',\",",
					"                    \"        subject: `Newman Test Report - ${testsFailed ? 'Failed' : 'Passed'}`,\",",
					"                    \"        html: 'See attached Newman HTML report.',\",",
					"                    \"        attachments: [{ filename: 'report.html', content: htmlReport }]\",",
					"                    \"    };\",",
					"                    \"\",",
					"                    \"    // Send email\",",
					"                    \"    transporter.sendMail(mailOptions, (err, info) => {\",",
					"                    \"        if (err) {\",",
					"                    \"            console.error(`Error sending email: ${err}`);\",",
					"                    \"        } else {\",",
					"                    \"            console.log(`Email sent: ${info.response}`);\",",
					"                    \"        }\",",
					"                    \"    });\",",
					"                    \"});\"",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"listen\": \"test\",",
					"            \"script\": {",
					"                \"id\": \"502e17ed-8dff-40ad-a8a8-3fd5d01e0e20\",",
					"                \"type\": \"text/javascript\",",
					"                \"exec\": [",
					"                    \"// Your test script code here\"",
					"                ]",
					"            }",
					"        }",
					"    ]",
					"}",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "61f6b558-673f-4696-90a0-4d17572556b8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}